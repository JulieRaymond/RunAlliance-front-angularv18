stages:
  - build
  - test
  - deploy

# Variables d'environnement
variables:
  DOCKER_IMAGE: "run-alliance-front-angularv18"
  DOCKER_TAG: "latest"

# Étape de build
build:
  stage: build
  image: node:alpine
  script:
    - echo "Building Angular Application"
    - npm install
    - npm run build --prod
  artifacts:
    paths:
      - dist/run-alliance-front-angularv18
    expire_in: 1 hour

# Étape de test
test:
  stage: test
  image: node:alpine
  script:
    - echo "Running tests"
    - npm install
    - npm run test -- --watch=false --browsers=ChromeHeadlessCI --reporters=junit
  artifacts:
    reports:
      junit: karma-results.xml
    expire_in: 1 hour

# Étape de déploiement
deploy:
  stage: deploy
  script:
    - echo "Deploying Angular Application"
    - docker-compose -f docker-compose.yml up --build -d
  only:
    - master  # Déployer uniquement sur la branche principale

# Nettoyage des conteneurs Docker après le déploiement
cleanup:
  stage: cleanup
  script:
    - echo "Cleaning up Docker containers"
    - docker-compose down
  when: always
